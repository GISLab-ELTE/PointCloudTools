stages:
  - build
  - test

variables:
  # No interactive timezone dialog for tzdata
  DEBIAN_FRONTEND: noninteractive

# SAST
include:
  - template: Jobs/SAST.gitlab-ci.yml

# Build
.build:
  stage: build
  before_script:
    - apt-get update -yqq
    - apt-get install -yqq build-essential cmake
    - apt-get install -yqq libboost-all-dev libgdal-dev libopencv-dev
    - apt-get install -yqq libopenmpi-dev
  script:
    - mkdir -p build
    - cd build
    - cmake ..
    - make

build_focal:
  extends: .build
  image: ubuntu:20.04

build_jammy:
  extends: .build
  image: ubuntu:22.04

# Code Quality with CodeChecker
cq_codecheker:
  stage: test
  image: tmselte/evaluator:cpp-ubuntu-22.04
  extends: .build
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ..
    - cd ..
    # Analyze the project
    - >
      CodeChecker analyze
      --analyzers clangsa clang-tidy
      --ctu
      -o ./reports
      ./build/compile_commands.json
    # Create the report file
    - >
      CodeChecker parse 
      --trim-path-prefix $(pwd)
      -e codeclimate
      -i .gitlab/codechecker_skip.lst
      ./reports > gl-code-quality-report.json || true
    # Note: 'CodeChecker parse' would return a non-zero exit code when any issues found
    - test -f gl-code-quality-report.json
  artifacts:
    expose_as: Code Quality Report
    reports:
      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.json]
    expire_in: 2 weeks
